// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var DateFns = require("date-fns");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var ReactDOMRe = require("reason-react/src/ReactDOMRe.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Cell$ReactTemplate = require("./Cell.bs.js");
var DayUtil$ReactTemplate = require("./DayUtil.bs.js");

var component = ReasonReact.statelessComponent("Cells");

function firstStartDay(param) {
  return DateFns.startOfWeek($$Array.fold_left((function (a, b) {
                    return a + ("-" + b);
                  }), "", $$Array.map((function (prim) {
                        return String(prim);
                      }), /* array */[
                      param[0],
                      param[1]
                    ])));
}

function getStartDays(startDay) {
  return $$Array.mapi((function (x, _) {
                return DateFns.addDays(startDay, Caml_int32.imul(7, x));
              }), Caml_array.caml_make_vect(5, startDay));
}

function getOneWeekDays(startDay) {
  return $$Array.mapi((function (x, _) {
                return DayUtil$ReactTemplate.dayInfo(DateFns.addDays(startDay, x));
              }), Caml_array.caml_make_vect(7, /* record */[
                  /* year */0,
                  /* month */0,
                  /* date */0,
                  /* str */""
                ]));
}

function renderWeekRow(renderDays, currentMonth, select, selectedDate) {
  return $$Array.map((function (e) {
                return ReasonReact.element(undefined, undefined, Cell$ReactTemplate.make(e, select, currentMonth, selectedDate, /* array */[]));
              }), renderDays);
}

function renderOneWeek(i, weekDays) {
  return ReactDOMRe.createElementVariadic("div", {
              key: "cell-" + String(i),
              className: "row"
            }, weekDays);
}

function renderDays(param, currentMonth, select, selectedDate) {
  return $$Array.mapi(renderOneWeek, $$Array.map((function (e) {
                    return renderWeekRow(e, currentMonth, select, selectedDate);
                  }), $$Array.map(getOneWeekDays, getStartDays(firstStartDay(/* tuple */[
                              param[0],
                              param[1]
                            ])))));
}

function make(currentMonth, currentYear, select, selectedDate, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", {
                          className: "container cells"
                        }, renderDays(/* tuple */[
                              currentYear,
                              currentMonth
                            ], currentMonth, select, selectedDate));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var jsComponent = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.currentMonth, jsProps.currentYear, jsProps.select, Js_primitive.undefined_to_opt(jsProps.selectedDate), /* array */[]);
      }));

exports.component = component;
exports.firstStartDay = firstStartDay;
exports.getStartDays = getStartDays;
exports.getOneWeekDays = getOneWeekDays;
exports.renderWeekRow = renderWeekRow;
exports.renderOneWeek = renderOneWeek;
exports.renderDays = renderDays;
exports.make = make;
exports.jsComponent = jsComponent;
/* component Not a pure module */
